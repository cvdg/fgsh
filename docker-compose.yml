---
secrets:
  cf_dns_api_token:
    file: ./secrets/cf_dns_api_token.secret

services:
  traefik:
    image: docker.io/library/traefik:v3.1.7
    container_name: traefik
    restart: unless-stopped
    command:
      # Tell Traefik to discover containers using the Docker API
      - --providers.docker=true
      # Enable the Trafik dashboard
      - --api.dashboard=true
      # Set up LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=cees.van.de.griend@griend.dev
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      # Set up an insecure listener that redirects all traffic to TLS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=griend.dev
      - --entrypoints.websecure.http.tls.domains[0].sans=*.griend.dev
    secrets:
      - cf_dns_api_token
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cf_dns_api_token
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.traefik.rule=Host(`traefik.griend.dev`)'
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"

  whoami1:
    image: "traefik/whoami"
    container_name: "whoami1"
    labels:
      traefik.enable: "true"
      traefik.http.routers.whoami1.rule: "Host(`whoami1.griend.dev`)"
      traefik.http.routers.whoami1.entrypoints: "websecure"
      traefik.http.routers.whoami1.tls.certresolver: "letsencrypt"

  whoami2:
    image: "traefik/whoami"
    container_name: "whoami2"
    labels:
      traefik.enable: "true"
      traefik.http.routers.whoami2.rule: "Host(`whoami2.griend.dev`)"
      traefik.http.routers.whoami2.entrypoints: "websecure"
      traefik.http.routers.whoami2.tls.certresolver: "letsencrypt"
